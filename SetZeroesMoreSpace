/*Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in-place.

Example 1:

Input: 
[
  [1,1,1],
  [1,0,1],
  [1,1,1]
]
Output: 
[
  [1,0,1],
  [0,0,0],
  [1,0,1]
]
Example 2:

Input: 
[
  [0,1,2,0],
  [3,4,5,2],
  [1,3,1,5]
]
Output: 
[
  [0,0,0,0],
  [0,4,5,0],
  [0,3,1,0]
]
Follow up:

A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?*/

class SetZeroes(O(m+n)) {
    public void setZeroes(int[][] matrix) {
        Set<Integer> setX=new HashSet<Integer>();
        Set<Integer> setY=new HashSet<Integer>();
        for (int i=0;i<matrix.length;i++)
        for (int j=0;j<matrix[i].length;j++){
            if (matrix[i][j]==0){
                setX.add(i);
                setY.add(j);
            }
        }    
        for (int k:setX){
            for (int j=0;j<matrix[0].length;j++){
                matrix[k][j]=0;
            }
        }        
        for (int k:setY){
            for (int j=0;j<matrix.length;j++){
                matrix[j][k]=0;
            }
        }        
    }
}
